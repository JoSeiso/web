name: Monitoring Lifecycle

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Elige "deploy" para instalar o "destroy" para borrar'
        required: true
        default: 'deploy'

jobs:
  monitoring:
    runs-on: ubuntu-latest

    steps:
      - name: Configurar credenciales AWS
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Instalar kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          aws eks update-kubeconfig --name iliberis --region us-east-1

      - name: Instalar Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Deploy o Destroy Prometheus Stack
        run: |
          if [ "${{ github.event.inputs.action }}" = "deploy" ]; then
            helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
            helm repo update
            helm upgrade --install monitoring prometheus-community/kube-prometheus-stack \
              --namespace monitoring --create-namespace \
              --set prometheus.prometheusSpec.resources.requests.cpu=100m \
              --set prometheus.prometheusSpec.resources.requests.memory=256Mi \
              --set grafana.resources.requests.cpu=50m \
              --set grafana.resources.requests.memory=128Mi
          else
            helm uninstall monitoring -n monitoring || true
            kubectl delete namespace monitoring --ignore-not-found
          fi
